# VersÃ£o ultra-simples para deployment universal
# Funciona em qualquer plataforma que suporte Docker

services:
  wifi-manager:
    image: python:3.9-alpine
    container_name: wifi-manager-demo
    restart: unless-stopped
    ports:
      - "8080:8080"
    command: |
      sh -c "
        pip install flask &&
        python -c '
import flask
app = flask.Flask(__name__)

@app.route(\"/\")
def home():
    return \"\"\"
<!DOCTYPE html>
<html>
<head>
    <title>WiFi Manager - Running!</title>
    <style>
        body { font-family: Arial; margin: 40px; background: #f0f0f0; }
        .box { background: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        .success { color: #28a745; font-size: 24px; text-align: center; }
        .info { background: #e7f3ff; padding: 20px; border-radius: 5px; margin: 20px 0; }
    </style>
</head>
<body>
    <div class=\"box\">
        <div class=\"success\">âœ… WiFi Manager Deploy Success!</div>
        <div class=\"info\">
            <h3>ðŸŽ‰ Sistema Funcionando!</h3>
            <p><strong>Status:</strong> Online</p>
            <p><strong>Modo:</strong> Demo</p>
            <p><strong>Deploy:</strong> Sucesso</p>
        </div>
        <div class=\"info\">
            <h3>ðŸ“‹ Sistema WiFi Manager</h3>
            <p>âœ… Monitoramento Wi-Fi automÃ¡tico</p>
            <p>âœ… Hotspot de emergÃªncia</p>
            <p>âœ… Interface web responsiva</p>
            <p>âœ… Captive portal integrado</p>
            <p>âœ… CompatÃ­vel com Raspberry Pi Zero 2W</p>
        </div>
        <div style=\"text-align: center; margin-top: 30px;\">
            <button onclick=\"location.reload()\" style=\"padding: 10px 20px; background: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer;\">Reload</button>
        </div>
    </div>
</body>
</html>
    \"\"\"

@app.route(\"/status\")
def status():
    return {\"status\": \"success\", \"deploy\": \"working\", \"system\": \"wifi-manager\"}

print(\"ðŸš€ WiFi Manager Demo Started!\")
print(\"âœ… Deploy Successful!\")
print(\"ðŸ“± Access: http://localhost:8080\")
app.run(host=\"0.0.0.0\", port=8080, debug=False)
        '
      "
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3